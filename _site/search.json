[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "",
    "text": "In survival analysis, we often start with the Kaplan-Meier estimator to understand our data. But you might wonder: “Why do we need anything else? The Kaplan-Meier curve shows us exactly what happened in our study.”\nThis document will show you why parametric models are incredibly useful, what we mean by “parameters,” and how we find the best parameter values using Maximum Likelihood Estimation (MLE)."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "",
    "text": "In survival analysis, we often start with the Kaplan-Meier estimator to understand our data. But you might wonder: “Why do we need anything else? The Kaplan-Meier curve shows us exactly what happened in our study.”\nThis document will show you why parametric models are incredibly useful, what we mean by “parameters,” and how we find the best parameter values using Maximum Likelihood Estimation (MLE)."
  },
  {
    "objectID": "index.html#part-i-what-are-parametric-models-and-why-do-we-need-them",
    "href": "index.html#part-i-what-are-parametric-models-and-why-do-we-need-them",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "Part I: What Are Parametric Models and Why Do We Need Them?",
    "text": "Part I: What Are Parametric Models and Why Do We Need Them?\n\nUnderstanding “Parameters” Through Simple Examples\nLet’s start with a familiar concept. When we describe people’s heights, we might say: - “The average height is 170 cm” - “Most people are within 10 cm of that average”\nThese two numbers (170 and 10) are parameters - they summarize the entire distribution of heights with just two values.\n\n\nCode\n# Load required packages\nlibrary(ggplot2)\nlibrary(survival)\nlibrary(flexsurv)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Generate height data\nheights &lt;- rnorm(1000, mean = 170, sd = 10)\n\npar(mfrow = c(1, 2))\n\n# Plot 1: Show all the data (like Kaplan-Meier approach)\nhist(heights, breaks = 30, main = \"All Individual Heights\\n(Non-parametric view)\", \n     xlab = \"Height (cm)\", col = \"lightblue\", border = \"white\")\n\n# Plot 2: Show the parametric summary\nx_vals &lt;- seq(140, 200, length.out = 100)\nnormal_curve &lt;- dnorm(x_vals, mean = 170, sd = 10)\nplot(x_vals, normal_curve, type = \"l\", lwd = 3, col = \"red\",\n     main = \"Parametric Summary\\nMean = 170, SD = 10\", \n     xlab = \"Height (cm)\", ylab = \"Density\")\ntext(185, 0.03, \"Just 2 numbers\\nsummarize everything!\", col = \"darkred\", cex = 1.2)\n\n\n\n\n\nKey insight: Instead of listing 1000 individual heights, we can describe the entire distribution with just 2 parameters!\n\n\nThe Same Idea Applied to Survival Data\nIn survival analysis, this same principle applies. Instead of describing every individual survival time, we can use parameters to capture the essential patterns.\n\n\nCode\n# Simulate survival data\nset.seed(456)\nn &lt;- 200\n\n# Generate Weibull survival times with known parameters\nshape_param &lt;- 1.5  # This controls if risk increases/decreases over time\nscale_param &lt;- 10   # This controls the \"time scale\"\nsurvival_times &lt;- rweibull(n, shape = shape_param, scale = scale_param)\n\n# Add some censoring\ncens_times &lt;- runif(n, min = 5, max = 15)\nobserved_times &lt;- pmin(survival_times, cens_times)\nevents &lt;- as.numeric(survival_times &lt;= cens_times)\n\n# Create survival object\nsurv_obj &lt;- Surv(observed_times, events)\n\npar(mfrow = c(1, 3))\n\n# Plot 1: Raw data (like showing all individual heights)\nplot(observed_times, rep(1, n), pch = ifelse(events == 1, 19, 1),\n     main = \"Raw Survival Data\\n(200 individual times)\", \n     xlab = \"Time\", ylab = \"\", yaxt = \"n\",\n     col = ifelse(events == 1, \"red\", \"blue\"))\nlegend(\"topright\", c(\"Event\", \"Censored\"), pch = c(19, 1), col = c(\"red\", \"blue\"))\n\n# Plot 2: Kaplan-Meier (step function)\nkm_fit &lt;- survfit(surv_obj ~ 1)\nplot(km_fit, conf.int = FALSE, main = \"Kaplan-Meier Curve\\n(Step function)\", \n     xlab = \"Time\", ylab = \"Survival Probability\", lwd = 2)\n\n# Plot 3: Parametric model (smooth curve)\nweibull_fit &lt;- flexsurvreg(surv_obj ~ 1, dist = \"weibull\")\nplot(weibull_fit, ci = FALSE, col = \"red\", lwd = 3,\n     main = \"Parametric Model\\n(Just 2 parameters!)\", \n     xlab = \"Time\", ylab = \"Survival Probability\")\n\n# Add parameter values\nshape_est &lt;- weibull_fit$res[\"shape\", \"est\"]\nscale_est &lt;- weibull_fit$res[\"scale\", \"est\"]\ntext(12, 0.8, paste0(\"Shape = \", round(shape_est, 2), \"\\nScale = \", round(scale_est, 1)), \n     col = \"darkred\", cex = 1.1, font = 2)\n\n\n\n\n\nWhat we see: The raw data shows 200 individual survival times. The Kaplan-Meier gives us a step function. The parametric model summarizes everything with just 2 numbers!\n\n\nWhy Are Parametric Models So Useful?\nNow that we understand what parameters are, let’s see why parametric models are incredibly powerful:\n\n1. Compact Summarization\nInstead of a complex jagged curve, you get interpretable numbers:\n\n\nCode\ncat(\"Weibull Parameters from our data:\\n\")\n\n\nWeibull Parameters from our data:\n\n\nCode\ncat(\"Shape parameter:\", round(shape_est, 2), \"\\n\")\n\n\nShape parameter: 1.44 \n\n\nCode\ncat(\"Scale parameter:\", round(scale_est, 1), \"\\n\\n\")\n\n\nScale parameter: 8.9 \n\n\nCode\ncat(\"What these mean:\\n\")\n\n\nWhat these mean:\n\n\nCode\nif (shape_est &gt; 1) {\n  cat(\"• Shape &gt; 1: Risk INCREASES over time\\n\")\n} else if (shape_est &lt; 1) {\n  cat(\"• Shape &lt; 1: Risk DECREASES over time\\n\")\n} else {\n  cat(\"• Shape = 1: Risk stays CONSTANT over time\\n\")\n}\n\n\n• Shape &gt; 1: Risk INCREASES over time\n\n\nCode\ncat(\"• Scale:\", round(scale_est, 1), \"represents the characteristic survival time\\n\")\n\n\n• Scale: 8.9 represents the characteristic survival time\n\n\n\n\n2. Extrapolation Beyond Your Study\nThis is huge for practical applications!\n\n\nCode\npar(mfrow = c(1, 2))\n\n# Plot 1: What KM can tell us\nmax_followup &lt;- max(observed_times)\nplot(km_fit, conf.int = FALSE, xlim = c(0, 20),\n     main = \"Kaplan-Meier Limitation\", \n     xlab = \"Time\", ylab = \"Survival Probability\", lwd = 2)\nabline(v = max_followup, lty = 2, col = \"red\", lwd = 2)\ntext(max_followup + 1, 0.8, \"End of\\nour study\", pos = 4, col = \"red\")\ntext(18, 0.5, \"?\\nCan't predict\\nbeyond here\", col = \"red\", cex = 1.2)\n\n# Plot 2: What parametric models can do\nplot(weibull_fit, ci = FALSE, col = \"blue\", lwd = 3, xlim = c(0, 20),\n     main = \"Parametric Model Power\", \n     xlab = \"Time\", ylab = \"Survival Probability\")\nabline(v = max_followup, lty = 2, col = \"gray\", lwd = 1)\ntext(max_followup + 1, 0.3, \"Can predict\\nfuture survival!\", pos = 4, col = \"blue\")\n\n# Show a specific prediction\nfuture_time &lt;- 18\nfuture_surv &lt;- 1 - pweibull(future_time, shape = shape_est, scale = scale_est)\npoints(future_time, future_surv, pch = 19, col = \"blue\", cex = 2)\ntext(future_time, future_surv + 0.1, paste0(\"Predicted survival\\nat \", future_time, \" years:\\n\", \n                                              round(future_surv * 100, 1), \"%\"), \n     col = \"blue\", adj = 0.5)\n\n\n\n\n\n\n\n3. Easy Group Comparisons\nComparing treatments becomes much clearer:\n\n\nCode\n# Simulate two treatment groups with different parameters\nset.seed(789)\n\n# Treatment A: Shape = 1.2, Scale = 12 (slightly increasing risk)\ngroup_a_times &lt;- rweibull(100, shape = 1.2, scale = 12)\n# Treatment B: Shape = 0.8, Scale = 10 (decreasing risk over time)  \ngroup_b_times &lt;- rweibull(100, shape = 0.8, scale = 10)\n\ncat(\"Comparing Treatments:\\n\\n\")\n\n\nComparing Treatments:\n\n\nCode\ncat(\"Treatment A parameters: Shape = 1.2, Scale = 12\\n\")\n\n\nTreatment A parameters: Shape = 1.2, Scale = 12\n\n\nCode\ncat(\"→ Interpretation: Risk INCREASES over time, longer survival scale\\n\\n\")\n\n\n→ Interpretation: Risk INCREASES over time, longer survival scale\n\n\nCode\ncat(\"Treatment B parameters: Shape = 0.8, Scale = 10\\n\") \n\n\nTreatment B parameters: Shape = 0.8, Scale = 10\n\n\nCode\ncat(\"→ Interpretation: Risk DECREASES over time, shorter survival scale\\n\\n\")\n\n\n→ Interpretation: Risk DECREASES over time, shorter survival scale\n\n\nCode\ncat(\"Conclusion: Treatment A may be better for long-term survival,\\n\")\n\n\nConclusion: Treatment A may be better for long-term survival,\n\n\nCode\ncat(\"but Treatment B shows improving outcomes for survivors.\\n\")\n\n\nbut Treatment B shows improving outcomes for survivors.\n\n\nThis is much clearer than trying to compare two jagged Kaplan-Meier curves!"
  },
  {
    "objectID": "index.html#part-ii-how-do-we-find-the-best-parameters-enter-maximum-likelihood-estimation",
    "href": "index.html#part-ii-how-do-we-find-the-best-parameters-enter-maximum-likelihood-estimation",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "Part II: How Do We Find the Best Parameters? Enter Maximum Likelihood Estimation",
    "text": "Part II: How Do We Find the Best Parameters? Enter Maximum Likelihood Estimation\nNow that we understand WHY parametric models are useful, the next question is: “How do we find the best parameter values for our data?”\nThis is where Maximum Likelihood Estimation (MLE) comes in.\n\nWhat is Maximum Likelihood Estimation?\nMLE asks a simple but powerful question:\n\n“Given the data we observed, what parameter values would make this data most likely to occur?”\n\nThink of it like detective work: - You observe some evidence (your survival data) - You ask: “What underlying truth (parameters) would most likely produce this evidence?”\n\n\nA Simple Example: Coin Flipping\nBefore jumping to survival analysis, let’s understand MLE with coin flips:\n\n\nCode\n# Imagine we flip a coin 10 times and get 7 heads\nheads &lt;- 7\ntotal_flips &lt;- 10\n\ncat(\"We observed:\", heads, \"heads out of\", total_flips, \"flips\\n\\n\")\n\n\nWe observed: 7 heads out of 10 flips\n\n\nCode\n# What's the MLE estimate of the probability of heads?\nmle_prob &lt;- heads / total_flips\ncat(\"MLE estimate: Probability of heads =\", mle_prob, \"\\n\\n\")\n\n\nMLE estimate: Probability of heads = 0.7 \n\n\nCode\ncat(\"Why this makes sense:\\n\")\n\n\nWhy this makes sense:\n\n\nCode\ncat(\"• If p = 0.7, getting 7 heads out of 10 is quite likely\\n\")\n\n\n• If p = 0.7, getting 7 heads out of 10 is quite likely\n\n\nCode\ncat(\"• If p = 0.3, getting 7 heads out of 10 is quite unlikely\\n\")\n\n\n• If p = 0.3, getting 7 heads out of 10 is quite unlikely\n\n\nCode\ncat(\"• MLE picks p = 0.7 because it makes our data most probable\\n\")\n\n\n• MLE picks p = 0.7 because it makes our data most probable\n\n\n\n\nApplying MLE to Survival Data\nThe same principle applies to survival data, but it’s more complex because: - We have censored observations (incomplete data) - We need to find multiple parameters simultaneously - The math is more complicated\nHere’s how it works conceptually:\n\n\nCode\ncat(\"MLE for Survival Data:\\n\\n\")\n\n\nMLE for Survival Data:\n\n\nCode\ncat(\"1. Choose a distribution (e.g., Weibull)\\n\")\n\n\n1. Choose a distribution (e.g., Weibull)\n\n\nCode\ncat(\"2. Try different parameter values\\n\") \n\n\n2. Try different parameter values\n\n\nCode\ncat(\"3. For each combination, ask: 'How likely is our observed data?'\\n\")\n\n\n3. For each combination, ask: 'How likely is our observed data?'\n\n\nCode\ncat(\"4. Pick the parameters that make our data MOST likely\\n\\n\")\n\n\n4. Pick the parameters that make our data MOST likely\n\n\nCode\ncat(\"Example with our data:\\n\")\n\n\nExample with our data:\n\n\nCode\ncat(\"• True parameters used to generate data: Shape =\", shape_param, \", Scale =\", scale_param, \"\\n\")\n\n\n• True parameters used to generate data: Shape = 1.5 , Scale = 10 \n\n\nCode\ncat(\"• MLE estimates from the data: Shape =\", round(shape_est, 2), \", Scale =\", round(scale_est, 1), \"\\n\")\n\n\n• MLE estimates from the data: Shape = 1.44 , Scale = 8.9 \n\n\nCode\ncat(\"• Pretty close! MLE worked well.\\n\")\n\n\n• Pretty close! MLE worked well.\n\n\n\n\nWhy MLE is Powerful\n\nPrincipled approach: Not guessing, but finding the most probable explanation\nWorks with complex data: Handles censoring, multiple parameters, etc.\nOptimal properties: Under certain conditions, MLE gives the best possible estimates\nWidely applicable: Used in almost all modern statistical methods"
  },
  {
    "objectID": "index.html#part-iii-putting-it-all-together---parametric-survival-analysis",
    "href": "index.html#part-iii-putting-it-all-together---parametric-survival-analysis",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "Part III: Putting It All Together - Parametric Survival Analysis",
    "text": "Part III: Putting It All Together - Parametric Survival Analysis\n\nThe Complete Workflow\nHere’s how parametric survival analysis works in practice:\n\n\nCode\n# Step 1: Look at your data with Kaplan-Meier\npar(mfrow = c(2, 2))\n\nplot(km_fit, conf.int = FALSE, main = \"Step 1: Explore with Kaplan-Meier\", \n     xlab = \"Time\", ylab = \"Survival Probability\", lwd = 2)\n\n# Step 2: Fit multiple parametric models using MLE\nexponential_fit &lt;- flexsurvreg(surv_obj ~ 1, dist = \"exponential\")\nlognormal_fit &lt;- flexsurvreg(surv_obj ~ 1, dist = \"lognormal\")\n\n# Step 3: Compare models\nplot(km_fit, conf.int = FALSE, main = \"Step 2: Try Different Models\", \n     xlab = \"Time\", ylab = \"Survival Probability\", lwd = 2, col = \"black\")\nlines(exponential_fit, col = \"blue\", lwd = 2, ci = FALSE)\nlines(weibull_fit, col = \"red\", lwd = 2, ci = FALSE)\nlines(lognormal_fit, col = \"green\", lwd = 2, ci = FALSE)\nlegend(\"topright\", c(\"Kaplan-Meier\", \"Exponential\", \"Weibull\", \"Log-normal\"),\n       col = c(\"black\", \"blue\", \"red\", \"green\"), lwd = 2, cex = 0.8)\n\n# Step 4: Compare model fit using AIC\nmodels &lt;- list(\"Exponential\" = exponential_fit, \n               \"Weibull\" = weibull_fit, \n               \"Log-normal\" = lognormal_fit)\naic_values &lt;- sapply(models, AIC)\n\nplot.new()\ntext(0.5, 0.9, \"Step 3: Compare Models (AIC)\", cex = 1.4, font = 2, adj = 0.5)\ntext(0.1, 0.7, \"AIC Values (lower = better):\", cex = 1.2, adj = 0)\nfor(i in 1:length(aic_values)) {\n  text(0.1, 0.6 - i*0.1, paste(names(aic_values)[i], \":\", round(aic_values[i], 1)), \n       cex = 1.1, adj = 0)\n}\nbest_model &lt;- names(aic_values)[which.min(aic_values)]\ntext(0.1, 0.2, paste(\"Best model:\", best_model), cex = 1.3, adj = 0, col = \"red\", font = 2)\n\n# Step 5: Interpret the best model\nplot.new()\ntext(0.5, 0.9, \"Step 4: Interpret Results\", cex = 1.4, font = 2, adj = 0.5)\nif(best_model == \"Weibull\") {\n  text(0.1, 0.7, paste(\"Weibull Shape:\", round(shape_est, 2)), cex = 1.2, adj = 0)\n  text(0.1, 0.6, paste(\"Weibull Scale:\", round(scale_est, 1)), cex = 1.2, adj = 0)\n  if(shape_est &gt; 1) {\n    text(0.1, 0.4, \"Interpretation:\\nRisk increases over time\", cex = 1.1, adj = 0, col = \"darkgreen\")\n  } else {\n    text(0.1, 0.4, \"Interpretation:\\nRisk decreases over time\", cex = 1.1, adj = 0, col = \"darkgreen\")\n  }\n}\n\n\n\n\n\n\n\nPractical Applications\nThese methods are used daily in:\nMedical Research: - Comparing treatment effectiveness - Predicting long-term survival rates - Planning clinical trials\nEngineering: - Equipment reliability analysis\n- Maintenance scheduling - Quality control\nBusiness: - Customer retention modeling - Employee turnover analysis - Product lifecycle management"
  },
  {
    "objectID": "index.html#key-takeaways",
    "href": "index.html#key-takeaways",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nWhat You Should Remember\n\nParameters are powerful: A few numbers can summarize complex patterns\nParametric models extend Kaplan-Meier: They don’t replace it, but add prediction and comparison capabilities\nMLE finds the best parameters: It’s not guessing - it’s finding the most probable explanation for your data\nThe workflow is systematic: Explore → Fit → Compare → Validate → Interpret\n\n\n\nWhen to Use Each Approach\nUse Kaplan-Meier when: - Exploring your data for the first time - No assumptions about underlying distributions - Describing what happened in your specific study\nUse parametric models when: - You need to predict beyond your observation period - You want to compare groups quantitatively - You need smooth mathematical functions for further analysis - You’re building more complex models\n\n\nThe Bottom Line\nParametric survival models and MLE give you powerful tools to: - Summarize complex survival patterns with interpretable parameters - Predict future outcomes beyond your study period\n- Compare treatments or groups quantitatively - Build more sophisticated models for regression analysis\nThese aren’t just academic concepts - they’re practical tools used every day in medicine, engineering, and business to make better decisions based on survival data."
  },
  {
    "objectID": "index.html#further-reading",
    "href": "index.html#further-reading",
    "title": "Why do we need parametric models in Survival Analysis?",
    "section": "Further Reading",
    "text": "Further Reading\nFor deeper understanding: - Collett, D. (2015). Modelling Survival Data in Medical Research - Klein, J. P., & Moeschberger, M. L. (2003). Survival Analysis: Techniques for Censored and Truncated Data\nRemember: Every expert was once a beginner. Master these fundamentals, and you’ll have a solid foundation for advanced statistical modeling.\n← Return to Course Materials"
  }
]